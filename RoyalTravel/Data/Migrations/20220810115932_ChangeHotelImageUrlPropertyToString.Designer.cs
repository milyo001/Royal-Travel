// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoyalTravel.Data;

#nullable disable

namespace RoyalTravel.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220810115932_ChangeHotelImageUrlPropertyToString")]
    partial class ChangeHotelImageUrlPropertyToString
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Sofia",
                            PostalCode = "1500",
                            State = "Sofia",
                            Street = "Karamanoleva Strasse 55"
                        },
                        new
                        {
                            Id = 2,
                            City = "Bansko",
                            PostalCode = "2477",
                            State = "Blagoevgrad",
                            Street = "Pirin Street 22A"
                        },
                        new
                        {
                            Id = 3,
                            City = "Bansko",
                            PostalCode = "1800",
                            State = "Blagoevgrad",
                            Street = "kapitan Kiril Stoyanov 44A"
                        });
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AirportShuttle")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowPets")
                        .HasColumnType("bit");

                    b.Property<bool>("Breakfast")
                        .HasColumnType("bit");

                    b.Property<bool>("Fitness")
                        .HasColumnType("bit");

                    b.Property<bool>("LocalShuttle")
                        .HasColumnType("bit");

                    b.Property<bool>("Parking")
                        .HasColumnType("bit");

                    b.Property<bool>("Pool")
                        .HasColumnType("bit");

                    b.Property<bool>("Restaurant")
                        .HasColumnType("bit");

                    b.Property<bool>("WiFi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            AirportShuttle = true,
                            AllowPets = true,
                            Breakfast = true,
                            Fitness = true,
                            LocalShuttle = false,
                            Parking = true,
                            Pool = false,
                            Restaurant = true,
                            WiFi = true
                        },
                        new
                        {
                            Id = 3,
                            AirportShuttle = false,
                            AllowPets = true,
                            Breakfast = true,
                            Fitness = true,
                            LocalShuttle = true,
                            Parking = true,
                            Pool = false,
                            Restaurant = true,
                            WiFi = true
                        },
                        new
                        {
                            Id = 4,
                            AirportShuttle = true,
                            AllowPets = true,
                            Breakfast = true,
                            Fitness = true,
                            LocalShuttle = true,
                            Parking = true,
                            Pool = true,
                            Restaurant = true,
                            WiFi = true
                        });
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("PhoneType")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StayId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("UsedPoints")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PaymentId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InfoId")
                        .HasColumnType("int");

                    b.Property<string>("LocationLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<int>("TotalRooms")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("AmenityId");

                    b.HasIndex("InfoId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 2,
                            AmenityId = 2,
                            ImageUrl = "https://cdn.pixabay.com/photo/2016/01/22/08/14/las-vegas-1155431_1280.jpg",
                            InfoId = 1,
                            LocationLink = "https://www.openstreetmap.org/export/embed.html?bbox=23.468127250671387%2C41.82734700208549%2C23.481924533843994%2C41.83267922868568&amp;layer=mapnik&amp;marker=41.83001317090565%2C23.47502589225769",
                            Name = "The Monastery",
                            Rating = 9,
                            Stars = 5,
                            TotalRooms = 15
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 1,
                            AmenityId = 3,
                            InfoId = 3,
                            LocationLink = "https://www.openstreetmap.org/export/embed.html?bbox=23.30752730369568%2C42.703512202193544%2C23.31756949424744%2C42.70877082903225&amp;layer=mapnik&amp;marker=42.70614157129563%2C23.312548398971558",
                            Name = "Royal Palace",
                            Rating = 8,
                            Stars = 3,
                            TotalRooms = 10
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 3,
                            AmenityId = 4,
                            InfoId = 2,
                            LocationLink = "https://www.openstreetmap.org/export/embed.html?bbox=23.47535848617554%2C41.82475655017072%2C23.485400676727295%2C41.830088992534364&amp;layer=mapnik&amp;marker=41.82742282687206%2C23.480379581451416",
                            Name = "Skyscraper Hotel",
                            Rating = 10,
                            Stars = 5,
                            TotalRooms = 20
                        });
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.Info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AmenitiesInfo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AreaInfo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CheckIn")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CheckOut")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("MinAge")
                        .HasColumnType("int");

                    b.Property<string>("PaymentOptions")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Policies")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PropertyDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("Infos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmenitiesInfo = "List with additional amenities...here.",
                            AreaInfo = "When traveling to one of Bulgaria most beautiful mountain cities, stay at our The Monastery by Royal Bansko hotel . We are located off interstate E-79  with easy access to Bansko Cabin lift and within easy reach of the historic district, Place Royale, and the old-world charms of our town: Bansko Church.",
                            CheckIn = "14:00",
                            CheckOut = "12:00",
                            MinAge = 18,
                            PaymentOptions = "Cash, Mastercard",
                            Policies = "Cancel 24 hours prior to 14:00h day of arrival.",
                            PropertyDescription = "The Monastery is one of the top boutique holiday complexes in Bansko located in quiet area only a few minutes’ walk from the main ski road and 5 to 7 minutes’ walk to the Gondola lift station. We have over 50 fully equipped and serviced apartments of various type all fitted with comfortable beds and kitchens. Larger apartments have sofa-beds in the living room as an additional sleeping area for 2 children or one adult. The Monastery boasts a 4 star facilities with large SPA, including 12 meter heated swimming pool, large Jacuzzi, Steam room, Fitness and Sauna. Massages are also available to book at an additional charge. Our restaurant is opened for breakfast, lunch and dinner, serving freshly prepared local and traditional Bulgarian dishes. The complex is fully serviced with friendly English speaking staff that will go out of their way to help you with anything you need and make your stay pleasant."
                        },
                        new
                        {
                            Id = 2,
                            AmenitiesInfo = "List with additional amenities...here.",
                            AreaInfo = "Mountain View is a luxurious hotel complex of 5-star functionality that offers the full range of services for full-value relax or business travel. The hotel is situated in the central part of Bansko, at only 15-minutes’ walk on foot from the ski lift.",
                            CheckIn = "14:00",
                            CheckOut = "12:00",
                            MinAge = 18,
                            PaymentOptions = "Cash, Mastercard",
                            Policies = "Cancel 24 hours prior to 14:00h day of arrival.",
                            PropertyDescription = "Mountain View by Royal works year-round – during the winter the complex is skiers’ favourite destination and offers ski wardrobe as well as free transport that regularly carries the skiers from the hotel to the lift and back, and during the summer the guests have the opportunity to take advantage of the outdoor swimming-pools with pool bar to the hotel, as well as versatile activities in and around Bansko, such as picnic up in the mountain, excursion to the Park of dancing bears, walks along eco pathways, cycling, off-road and many more."
                        },
                        new
                        {
                            Id = 3,
                            AmenitiesInfo = "List with additional amenities...here.",
                            AreaInfo = "Located in the Sofia's wealthy Boyana neighborhood at the foot of the Vitosha Mountain, the Hotel Villa Boyana offers free private parking and free Wi-Fi.All rooms at the Villa Boyana feature an elegant bathroom with toiletries,a mini - bar and a TV.",
                            CheckIn = "14:00",
                            CheckOut = "12:00",
                            MinAge = 18,
                            PaymentOptions = "Cash, Mastercard",
                            Policies = "Cancel 24 hours prior to 14:00h day of arrival.",
                            PropertyDescription = "An Italian and a Bulgarian restaurant can be found next to the hotel. The famous Boyana Church is 400 m away and the National History Museum is 0.7 mi away.\r\n                      The center of Sofia can be reached by car in 15 minutes and the Simeonovo Ski Elevator in 10 minutes."
                        },
                        new
                        {
                            Id = 4,
                            AmenitiesInfo = "List with additional amenities...here.",
                            AreaInfo = "Located in the Sofia's wealthy Boyana neighborhood at the foot of the Vitosha Mountain, the Hotel Villa Boyana offers free private parking and free Wi-Fi.All rooms at the Villa Boyana feature an elegant bathroom with toiletries,a mini - bar and a TV.",
                            CheckIn = "14:00",
                            CheckOut = "12:00",
                            MinAge = 18,
                            PaymentOptions = "Cash, Mastercard",
                            Policies = "Cancel 24 hours prior to 14:00h day of arrival.",
                            PropertyDescription = "An Italian and a Bulgarian restaurant can be found next to the hotel. The famous Boyana Church is 400 m away and the National History Museum is 0.7 mi away.\r\n                      The center of Sofia can be reached by car in 15 minutes and the Simeonovo Ski Elevator in 10 minutes."
                        });
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("ExpirationDate")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("MaxOccupancy")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("Smoking")
                        .HasColumnType("bit");

                    b.Property<bool>("WithBreakfast")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 1,
                            MaxOccupancy = 2,
                            Price = 43.55m,
                            RoomType = "One Queen Bed",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 2,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 1,
                            MaxOccupancy = 2,
                            Price = 43.55m,
                            RoomType = "One Queen Bed",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 3,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 1,
                            MaxOccupancy = 2,
                            Price = 43.55m,
                            RoomType = "One Queen Bed",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 4,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 2,
                            MaxOccupancy = 2,
                            Price = 43.55m,
                            RoomType = "One Queen Bed",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 5,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 2,
                            MaxOccupancy = 2,
                            Price = 43.55m,
                            RoomType = "One Queen Bed",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 6,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 1,
                            MaxOccupancy = 4,
                            Price = 47.55m,
                            RoomType = "Two Queen Beds",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 7,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 1,
                            MaxOccupancy = 4,
                            Price = 47.55m,
                            RoomType = "Two Queen Beds",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 8,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 1,
                            MaxOccupancy = 4,
                            Price = 47.55m,
                            RoomType = "Two Queen Beds",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 9,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 2,
                            MaxOccupancy = 4,
                            Price = 47.55m,
                            RoomType = "Two Queen Beds",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 10,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 2,
                            MaxOccupancy = 4,
                            Price = 47.55m,
                            RoomType = "Two Queen Beds",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 11,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 1,
                            MaxOccupancy = 4,
                            Price = 48.55m,
                            RoomType = "One Queen Bed",
                            Smoking = true,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 12,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 1,
                            MaxOccupancy = 4,
                            Price = 48.55m,
                            RoomType = "One Queen Bed",
                            Smoking = true,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 13,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 1,
                            MaxOccupancy = 4,
                            Price = 48.55m,
                            RoomType = "One Queen Bed",
                            Smoking = true,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 14,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 2,
                            MaxOccupancy = 4,
                            Price = 48.55m,
                            RoomType = "One Queen Bed",
                            Smoking = true,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 15,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 2,
                            MaxOccupancy = 4,
                            Price = 48.55m,
                            RoomType = "One Queen Bed",
                            Smoking = true,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 16,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 1,
                            MaxOccupancy = 4,
                            Price = 55.39m,
                            RoomType = "Two Queen Beds",
                            Smoking = true,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 17,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 1,
                            MaxOccupancy = 4,
                            Price = 55.39m,
                            RoomType = "Two Queen Beds",
                            Smoking = true,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 18,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 1,
                            MaxOccupancy = 4,
                            Price = 55.39m,
                            RoomType = "Two Queen Beds",
                            Smoking = true,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 19,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 2,
                            MaxOccupancy = 4,
                            Price = 55.39m,
                            RoomType = "Two Queen Beds",
                            Smoking = true,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 20,
                            Description = "Free WiFi, free continental breakfast, mini-refrigerator, microwave, air conditioning, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarm clock, desk, iron, ironing board",
                            HotelId = 2,
                            MaxOccupancy = 4,
                            Price = 55.39m,
                            RoomType = "Two Queen Beds",
                            Smoking = true,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 21,
                            Description = "Free WiFi, free continental breakfast, refrigerator, microwave, airconditioning, hot tub/    jacuzzi coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board",
                            HotelId = 1,
                            MaxOccupancy = 6,
                            Price = 120.61m,
                            RoomType = "Two Bedroom Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 22,
                            Description = "Free WiFi, free continental breakfast, refrigerator, microwave, airconditioning, hot tub/    jacuzzi coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board",
                            HotelId = 1,
                            MaxOccupancy = 6,
                            Price = 120.61m,
                            RoomType = "Two Bedroom Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 23,
                            Description = "Free WiFi, free continental breakfast, refrigerator, microwave, airconditioning, hot tub/    jacuzzi coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board",
                            HotelId = 1,
                            MaxOccupancy = 6,
                            Price = 120.61m,
                            RoomType = "Two Bedroom Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 24,
                            Description = "Free WiFi, free continental breakfast, refrigerator, microwave, airconditioning, hot tub/    jacuzzi coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board",
                            HotelId = 2,
                            MaxOccupancy = 6,
                            Price = 120.61m,
                            RoomType = "Two Bedroom Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 25,
                            Description = "Free WiFi, free continental breakfast, refrigerator, microwave, airconditioning, hot tub/    jacuzzi coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board",
                            HotelId = 2,
                            MaxOccupancy = 6,
                            Price = 120.61m,
                            RoomType = "Two Bedroom Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 26,
                            Description = "Free WiFi, free continental breakfast, sofa bed,refrigerator, microwave, airconditioning, hot tub/    jacuzzi coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board",
                            HotelId = 3,
                            MaxOccupancy = 5,
                            Price = 173.23m,
                            RoomType = "Mountain View Junior Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 27,
                            Description = "Free WiFi, free continental breakfast, sofa bed,refrigerator, microwave, airconditioning, hot tub/    jacuzzi coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board",
                            HotelId = 3,
                            MaxOccupancy = 5,
                            Price = 173.23m,
                            RoomType = "Mountain View Junior Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 28,
                            Description = "Free WiFi, free continental breakfast, sofa bed,refrigerator, microwave, airconditioning, hot tub/    jacuzzi coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board",
                            HotelId = 3,
                            MaxOccupancy = 5,
                            Price = 173.23m,
                            RoomType = "Mountain View Junior Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 29,
                            Description = "Free WiFi, free continental breakfast, sofa bed,refrigerator, microwave, airconditioning, hot tub/    jacuzzi coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board",
                            HotelId = 3,
                            MaxOccupancy = 5,
                            Price = 173.23m,
                            RoomType = "Mountain View Junior Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 30,
                            Description = "Free WiFi, free continental breakfast, sofa bed,refrigerator, microwave, airconditioning, hot tub/    jacuzzi coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board",
                            HotelId = 3,
                            MaxOccupancy = 5,
                            Price = 173.23m,
                            RoomType = "Mountain View Junior Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 31,
                            Description = "Free WiFi, free continental breakfast, sofa bed,refrigerator, microwave, airconditioning, hot tub/    jacuzzi coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board",
                            HotelId = 3,
                            MaxOccupancy = 6,
                            Price = 273.73m,
                            RoomType = "Mountain View Grand Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 32,
                            Description = "Free WiFi, free continental breakfast, sofa bed,refrigerator, microwave, airconditioning, hot tub/    jacuzzi coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board",
                            HotelId = 3,
                            MaxOccupancy = 6,
                            Price = 273.73m,
                            RoomType = "Mountain View Grand Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 33,
                            Description = "Free WiFi, free continental breakfast, sofa bed,refrigerator, microwave, airconditioning, hot tub/    jacuzzi coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board",
                            HotelId = 3,
                            MaxOccupancy = 6,
                            Price = 273.73m,
                            RoomType = "Mountain View Grand Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 34,
                            Description = "Free WiFi, free continental breakfast, sofa bed,refrigerator, microwave, airconditioning, hot tub/    jacuzzi coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board",
                            HotelId = 3,
                            MaxOccupancy = 6,
                            Price = 273.73m,
                            RoomType = "Mountain View Grand Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 35,
                            Description = "Free WiFi, free continental breakfast, sofa bed,refrigerator, microwave, airconditioning, hot tub/    jacuzzi coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board",
                            HotelId = 3,
                            MaxOccupancy = 6,
                            Price = 273.73m,
                            RoomType = "Mountain View Grand Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 36,
                            Description = "Free high-speed WiFi, free hot breakfast,refrigerator, microwave, air conditioning, hot tub/    jacuzzi, VIP garage parking, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board, huge warderobe, ",
                            HotelId = 3,
                            MaxOccupancy = 6,
                            Price = 273.73m,
                            RoomType = "Presidential Tower Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 37,
                            Description = "Free high-speed WiFi, free hot breakfast,refrigerator, microwave, air conditioning, hot tub/    jacuzzi, VIP garage parking, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board, huge warderobe, ",
                            HotelId = 3,
                            MaxOccupancy = 6,
                            Price = 273.73m,
                            RoomType = "Presidential Tower Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 38,
                            Description = "Free high-speed WiFi, free hot breakfast,refrigerator, microwave, air conditioning, hot tub/    jacuzzi, VIP garage parking, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board, huge warderobe, ",
                            HotelId = 3,
                            MaxOccupancy = 6,
                            Price = 273.73m,
                            RoomType = "Presidential Tower Suite",
                            Smoking = false,
                            WithBreakfast = true
                        },
                        new
                        {
                            Id = 39,
                            Description = "Free high-speed WiFi, free hot breakfast,refrigerator, microwave, air conditioning, hot tub/    jacuzzi, VIP garage parking, coffee/tea maker, hair dryer, HDTV, bathroom amenities, alarmclock, desk, iron, ironing board, huge warderobe, ",
                            HotelId = 3,
                            MaxOccupancy = 6,
                            Price = 273.73m,
                            RoomType = "Presidential Tower Suite",
                            Smoking = false,
                            WithBreakfast = true
                        });
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.Stay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Adults")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BookedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Children")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MoneySpend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PointsEarned")
                        .HasColumnType("int");

                    b.Property<int?>("PointsSpend")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomId");

                    b.ToTable("Stays");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("RoyalTravel.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("RoyalTravel.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoyalTravel.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("RoyalTravel.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.ApplicationUser", b =>
                {
                    b.HasOne("RoyalTravel.Data.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("RoyalTravel.Data.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId");

                    b.Navigation("Address");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.Hotel", b =>
                {
                    b.HasOne("RoyalTravel.Data.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoyalTravel.Data.Models.Amenity", "Amenity")
                        .WithMany()
                        .HasForeignKey("AmenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoyalTravel.Data.Models.Info", "Info")
                        .WithMany()
                        .HasForeignKey("InfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Amenity");

                    b.Navigation("Info");
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.Review", b =>
                {
                    b.HasOne("RoyalTravel.Data.Models.Hotel", null)
                        .WithMany("Reviews")
                        .HasForeignKey("HotelId");
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.Room", b =>
                {
                    b.HasOne("RoyalTravel.Data.Models.Hotel", null)
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId");
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.Stay", b =>
                {
                    b.HasOne("RoyalTravel.Data.Models.ApplicationUser", null)
                        .WithMany("Stays")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoyalTravel.Data.Models.Hotel", "Hotel")
                        .WithMany("Stays")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoyalTravel.Data.Models.Room", "Room")
                        .WithMany("Stays")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.ApplicationUser", b =>
                {
                    b.Navigation("Stays");
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.Hotel", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("Rooms");

                    b.Navigation("Stays");
                });

            modelBuilder.Entity("RoyalTravel.Data.Models.Room", b =>
                {
                    b.Navigation("Stays");
                });
#pragma warning restore 612, 618
        }
    }
}
