@{
    ViewData["Title"] = "Hotels";
}

@model RoyalTravel.ViewModels.Booking.BookingViewModel
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Search Hotels</title>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/css/datepicker.min.css" />

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/js/bootstrap-datepicker.min.js"></script>


    <style>
        .parent {
            text-align: center;
        }

        input {
            padding: 10px;
            font-family: FontAwesome, "Open Sans", Verdana, sans-serif;
            font-style: normal;
            font-weight: normal;
            text-decoration: inherit;
            border-radius: 0 !important;
        }

        .form-control {
            border-radius: 0 !important;
            font-size: 12x;
        }

        .clickable {
            cursor: pointer;
        }
    </style>

</head>
<div class="parent">
    <form method="get" asp-controller="Booking" asp-action="SearchHotels">
        <div class="row">
            <div class="col">
                <label for="destination">Where to?</label>
                <input asp-for="InputModel.Destination" class="form-control" type="text" id="destination" width="276" name="destination" placeholder="Enter Destination" required />
            </div>
            <div class="col">
                <label for="dp1">Arrival</label>
                <input id="dp1" type="text" class="form-control clickable input-md" id="DtChkIn" placeholder="&#xf133;  Check-In" width="276" name="checkIn" required autocomplete="off">
            </div>
            <div class="col">
                <label for="dp2">Departure</label>
                <input id="dp2" type="text" class="form-control clickable input-md" id="DtChkOut" placeholder="&#xf133;  Check-Out" width="276" name="checkOut" required autocomplete="off">
            </div>
            <div class="col">
                <label for="adults">Adults</label>
                <select asp-for="InputModel.Adults" class="form-control" id="adults" width="276" name="adults" required>
                    <option>1</option>
                    <option>2</option>
                    <option>3</option>
                    <option>4</option>
                    <option>5</option>
                    <option>6</option>
                </select>
            </div>
            <div class="col">
                <label for="kids">Children</label>
                <select class="form-control" id="kids" width="276" name="children">
                    <option>0</option>
                    <option>1</option>
                    <option>2</option>
                    <option>3</option>
                    <option>4</option>
                    <option>5</option>
                </select>
            </div>
        </div>
        <div style="margin-top:24px" class="row">
            <button type="submit" class="btn btn-primary btn-lg btn-block" asp-controller="Booking" asp-action="SearchHotels">Find Hotels</button>
        </div>
    </form>
</div>

@if (Model.BookingOutputViewModels.Count() != 0)
{
    <table class="table table-bordered">
        <thead>
            <tr align="center">
                <th scope="col">Name</th>
                <th scope="col">Location</th>
                <th scope="col">Rating</th>
                <th scope="col">Wifi</th>
                <th scope="col">Pool</th>
                <th scope="col">Allow Pets</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var hotel in Model.BookingOutputViewModels)
            {
                <tr align="center">

                    <td>@hotel.HotelName</td>
                    <td>@hotel.Address</td>
                    <td>@hotel.Rating/10</td>
                    <td>@hotel.Wifi</td>
                    <td>@hotel.Pool</td>
                    <td>@hotel.PetFriendly</td>
                    <td>
                        <form method="get">
                            <a type="submit" class="btn btn-success" asp-controller="Booking" asp-action="BookHotel"
                               asp-route-id="@hotel.HotelId"
                               asp-route-checkIn="@ViewContext.HttpContext.Request.Query["checkIn"]"
                               asp-route-checkOut="@ViewContext.HttpContext.Request.Query["checkOut"]"
                               asp-route-adults="@ViewContext.HttpContext.Request.Query["adults"]"
                               asp-route-children="@ViewContext.HttpContext.Request.Query["children"]">Check Rates</a>
                        </form>
                    </td>
                    <td>
                        <form method="get">
                            <a type="submit" class="btn btn-primary" asp-controller="Booking" asp-action="SelectHotel" asp-route-id="@hotel.HotelId">Details</a>
                        </form>
                    </td>

                </tr>
            }

        </tbody>
    </table>
}
@{ 
    await Html.RenderPartialAsync("_InfoCardsPartial");
}

<script>
    var nowTemp = new Date();
    var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

    var checkin = $('#dp1').datepicker({

        beforeShowDay: function (date) {
            return date.valueOf() >= now.valueOf();
        },
        autoclose: true
        

    }).on('changeDate', function (ev) {
        if (ev.date.valueOf() > checkout.datepicker("getDate").valueOf() || !checkout.datepicker("getDate").valueOf()) {

            var newDate = new Date(ev.date);
            newDate.setDate(newDate.getDate() + 1);
            checkout.datepicker("update", newDate);

        }
        $('#dp2')[0].focus();
    });


    var checkout = $('#dp2').datepicker({
        beforeShowDay: function (date) {
            if (!checkin.datepicker("getDate").valueOf()) {
                return date.valueOf() >= new Date().valueOf();
            } else {
                return date.valueOf() > checkin.datepicker("getDate").valueOf();
            }
        },
        autoclose: true

    }).on('changeDate', function (ev) { });

</script>



